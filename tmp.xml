<?xml version="1.0" encoding='UTF-8'?>
<NineML xmlns="http://nineml.net/9ML/1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://nineml.net/9ML/1.0/NineML_v1.0.xsd">
    <ComponentClass name="Izhikevich">
        <Parameter name="a" dimension="per_time" />
        <Parameter name="c" dimension="voltage" />
        <Parameter name="b" dimension="per_voltage" />
        <Parameter name="d" dimension="dimensionless" />
        <Parameter name="theta" dimension="voltage" />
        <Parameter name="iInj" dimension="current" />
        <AnalogReducePort name="iSyn" operator="+" dimension="current" />
        <AnalogSendPort name="V" dimension="voltage" />
        <EventSendPort name="spikeOutput" />
        <Dynamics>
            <StateVariable name="V" dimension="voltage" />
            <StateVariable name="U" dimension="dimensionless" />
            <Regime name="subthresholdRegime">
                <TimeDerivative variable="U">
                    <MathInline>a*(b*V - U)</MathInline>
                </TimeDerivative>
                <TimeDerivative variable="V">
                    <MathInline>(0.04*V*V/unitV + 5*V + (140.0 - U)*unitV + (iSyn +
                        iInj)*unitR)/unitT
                    </MathInline>
                </TimeDerivative>
                <OnCondition target_regime="subthresholdRegime">
                    <Trigger>
                        <MathInline>V &gt; theta </MathInline>
                    </Trigger>
                    <StateAssignment variable="V">
                        <MathInline>c</MathInline>
                    </StateAssignment>
                    <StateAssignment variable="U">
                        <MathInline>U+d</MathInline>
                    </StateAssignment>
                    <OutputEvent port="spikeOutput" />
                </OnCondition>
            </Regime>
            <Constant name="unitV" units="V">1</Constant>
            <Constant name="unitR" units="Ohm">1</Constant>
            <Constant name="unitT" units="s">1</Constant>
        </Dynamics>
    </ComponentClass>
    <Component name="IzhikevichProperties">
        <Definition>Izhikevich</Definition>
        <Property name="theta" units="mV">
            <SingleValue>50</SingleValue>
        </Property>
        <Property name="a" units="per_s">
            <SingleValue>0.02</SingleValue>
        </Property>
        <Property name="b" units="per_V">
            <SingleValue>0.2</SingleValue>
        </Property>
        <Property name="c" units="mV">
            <SingleValue>-65</SingleValue>
        </Property>
        <Property name="d" units="unitless">
            <SingleValue>8</SingleValue>
        </Property>
        <Property name="iInj" units="nA">
            <SingleValue>10.0</SingleValue>
        </Property>
    </Component>
    <ComponentClass name="IafCoba">
        <AnalogSendPort dimension="voltage" name="iaf_V" />
        <AnalogReducePort dimension="current" operator="+" name="iaf_ISyn" />
        <AnalogSendPort dimension="current" name="cobaExcit_I" />
        <EventSendPort name="iaf_spikeoutput" />
        <EventReceivePort name="cobaExcit_spikeinput" />
        <Parameter dimension="capacitance" name="iaf_cm" />
        <Parameter dimension="time" name="iaf_taurefrac" />
        <Parameter dimension="conductanceDensity" name="iaf_gl" />
        <Parameter dimension="voltage" name="iaf_vreset" />
        <Parameter dimension="voltage" name="iaf_vrest" />
        <Parameter dimension="voltage" name="iaf_vthresh" />
        <Parameter dimension="time" name="cobaExcit_tau" />
        <Parameter dimension="conductanceDensity" name="cobaExcit_q" />
        <Parameter dimension="voltage" name="cobaExcit_vrev" />
        <Dynamics>
            <StateVariable dimension="voltage" name="iaf_V" />
            <StateVariable dimension="time" name="iaf_tspike" />
            <StateVariable dimension="conductanceDensity" name="cobaExcit_g" />
            <Regime name="RefractoryRegime">
                <TimeDerivative variable="cobaExcit_g">
                    <MathInline>-cobaExcit_g/cobaExcit_tau</MathInline>
                </TimeDerivative>
                <OnEvent target_regime="RefractoryRegime" port="cobaExcit_spikeinput">
                    <StateAssignment variable="cobaExcit_g">
                        <MathInline>cobaExcit_g+cobaExcit_q</MathInline>
                    </StateAssignment>
                </OnEvent>
                <OnCondition target_regime="RegularRegime">
                    <Trigger>
                        <MathInline>t &gt; iaf_tspike + iaf_taurefrac</MathInline>
                    </Trigger>
                </OnCondition>
            </Regime>
            <Regime name="RegularRegime">
                <TimeDerivative variable="iaf_V">
                    <MathInline>( iaf_gl*( iaf_vrest - iaf_V ) + iaf_ISyn+cobaExcit_I)/(iaf_cm)
                    </MathInline>
                </TimeDerivative>
                <TimeDerivative variable="cobaExcit_g">
                    <MathInline>-cobaExcit_g/cobaExcit_tau</MathInline>
                </TimeDerivative>
                <OnEvent target_regime="RegularRegime" port="cobaExcit_spikeinput">
                    <StateAssignment variable="cobaExcit_g">
                        <MathInline>cobaExcit_g+cobaExcit_q</MathInline>
                    </StateAssignment>
                </OnEvent>
                <OnCondition target_regime="RefractoryRegime">
                    <StateAssignment variable="iaf_tspike">
                        <MathInline>t</MathInline>
                    </StateAssignment>
                    <StateAssignment variable="iaf_V">
                        <MathInline>iaf_vreset</MathInline>
                    </StateAssignment>
                    <OutputEvent port="iaf_spikeoutput" />
                    <Trigger>
                        <MathInline>iaf_V &gt; iaf_vthresh</MathInline>
                    </Trigger>
                </OnCondition>
            </Regime>
            <Alias name="cobaExcit_I">
                <MathInline>cobaExcit_g*(cobaExcit_vrev-iaf_V)</MathInline>
            </Alias>
        </Dynamics>
    </ComponentClass>
    <Component name="IaFCobaProperties">
        <Definition>IafCoba</Definition>
        <Initial name="iaf_V" units="mV">
            <SingleValue>-60</SingleValue>
        </Initial>
        <Property name="iaf_cm" units="nF">
            <SingleValue>0.02</SingleValue>
        </Property>
        <Property name="iaf_taurefrac" units="ms">
            <SingleValue>3</SingleValue>
        </Property>
        <Property name="iaf_gl" units="mS">
            <SingleValue>0.1</SingleValue>
        </Property>
        <Property name="iaf_vreset" units="mV">
            <SingleValue>-70</SingleValue>
        </Property>
        <Property name="iaf_vrest" units="mV">
            <SingleValue>-60</SingleValue>
        </Property>
        <Property name="iaf_vthresh" units="mV">
            <SingleValue>20</SingleValue>
        </Property>
        <Property name="cobaExcit_tau" units="ms">
            <SingleValue>2</SingleValue>
        </Property>
        <Property name="cobaExcit_q" units="uF_per_cm2">
            <SingleValue>1</SingleValue>
        </Property>
        <Property name="cobaExcit_vrev" units="mV">
            <SingleValue>0</SingleValue>
        </Property>
    </Component>
    <ComponentClass name="IaF">
        <AnalogSendPort dimension="voltage" name="iaf_V" />
        <AnalogReducePort dimension="current" operator="+" name="iaf_ISyn" />
        <EventSendPort name="iaf_spikeoutput" />
        <Parameter dimension="capacitance" name="iaf_cm" />
        <Parameter dimension="time" name="iaf_taurefrac" />
        <Parameter dimension="voltage" name="iaf_vreset" />
        <Parameter dimension="voltage" name="iaf_vrest" />
        <Parameter dimension="voltage" name="iaf_vthresh" />
        <Parameter dimension="conductanceDensity" name="iaf_gl" />
        <Dynamics>
            <StateVariable dimension="voltage" name="iaf_V" />
            <StateVariable dimension="time" name="iaf_tspike" />
            <Regime name="RefractoryRegime">
                <OnCondition target_regime="RegularRegime">
                    <Trigger>
                        <MathInline>t &gt; iaf_tspike + iaf_taurefrac</MathInline>
                    </Trigger>
                </OnCondition>
            </Regime>
            <Regime name="RegularRegime">
                <TimeDerivative variable="iaf_V">
                    <MathInline>(iaf_gl*( iaf_vrest - iaf_V ) + iaf_ISyn)/(iaf_cm)</MathInline>
                </TimeDerivative>
                <OnCondition target_regime="RefractoryRegime">
                    <StateAssignment variable="iaf_tspike">
                        <MathInline>t</MathInline>
                    </StateAssignment>
                    <StateAssignment variable="iaf_V">
                        <MathInline>iaf_vreset</MathInline>
                    </StateAssignment>
                    <OutputEvent port="iaf_spikeoutput" />
                    <Trigger>
                        <MathInline>iaf_V &gt; iaf_vthresh</MathInline>
                    </Trigger>
                </OnCondition>
            </Regime>
        </Dynamics>
    </ComponentClass>
    <ComponentClass name="CoBa">
        <Parameter name="coba_vrev" dimension="voltage" />
        <EventReceivePort name="coba_spikeinput" />
        <AnalogReceivePort name="iaf_V" dimension="voltage" />
        <AnalogSendPort dimension="current" name="coba_I" />
        <Parameter dimension="time" name="coba_tau" />
        <Parameter dimension="conductanceDensity" name="coba_q" />
        <Dynamics>
            <StateVariable dimension="conductanceDensity" name="coba_g" />
            <Regime name="RegularRegime">
                <OnEvent target_regime="RegularRegime" port="coba_spikeinput">
                    <StateAssignment variable="coba_g">
                        <MathInline>coba_g+coba_q</MathInline>
                    </StateAssignment>
                </OnEvent>
                <TimeDerivative variable="coba_g">
                    <MathInline>-coba_g/coba_tau</MathInline>
                </TimeDerivative>
            </Regime>
            <Alias name="coba_I">
                <MathInline>coba_g*(coba_vrev-iaf_V)</MathInline>
            </Alias>
        </Dynamics>
    </ComponentClass>
    <Component name="IaFProperties">
        <Definition>IaF</Definition>
        <Property name="iaf_cm" units="nF">
            <SingleValue>0.2</SingleValue>
        </Property>
        <Property name="iaf_taurefrac" units="ms">
            <SingleValue>5</SingleValue>
        </Property>
        <Property name="iaf_gl" units="mS">
            <SingleValue>0.05</SingleValue>
        </Property>
        <Property name="iaf_vreset" units="mV">
            <SingleValue>-60</SingleValue>
        </Property>
        <Property name="iaf_vrest" units="mV">
            <SingleValue>-60</SingleValue>
        </Property>
        <Property name="iaf_vthresh" units="mV">
            <SingleValue>-50</SingleValue>
        </Property>
    </Component>
    <Component name="IaFSynapseExcitatory">
        <Definition>CoBa</Definition>
        <Property name="coba_tau" units="ms">
            <SingleValue>5</SingleValue>
        </Property>
        <Property name="coba_q" units="uF_per_cm2">
            <SingleValue>0.004</SingleValue>
        </Property>
        <Property name="coba_vrev" units="mV">
            <SingleValue>0</SingleValue>
        </Property>
    </Component>
    <Component name="IaFSynapseInhibitory">
        <Definition>CoBa</Definition>
        <Property name="coba_tau" units="ms">
            <SingleValue>5</SingleValue>
        </Property>
        <Property name="coba_q" units="uF_per_cm2">
            <SingleValue>0.051</SingleValue>
        </Property>
        <Property name="coba_vrev" units="mV">
            <SingleValue>-80</SingleValue>
        </Property>
    </Component>
    <Population name="Excitatory">
        <Size>3200</Size>
        <Cell>
            <Reference>IaFProperties</Reference>
        </Cell>
    </Population>
    <Population name="Inhibitory">
        <Size>800</Size>
        <Cell>
            <Reference>IaFProperties</Reference>
        </Cell>
    </Population>
    <Selection name="AllNeurons">
        <Concatenate>
            <Item index="0">
              <Reference>Excitatory</Reference>
            </Item>
            <Item index="1">
              <Reference>Inhibitory</Reference>
            </Item>
        </Concatenate>
    </Selection>
    <Projection name="Excitation">
        <Source>
            <Reference>Excitatory</Reference>
        </Source>
        <Destination>
            <Reference>AllNeurons</Reference>
            <FromResponse send_port="coba_I" receive_port="iaf_ISyn" />
        </Destination>
        <Response>
            <Reference>IaFSynapseExcitatory</Reference>
            <FromSource send_port="iaf_spikeoutput" receive_port="coba_spikeinput" />
        </Response>
        <Connectivity>
            <Component name="ExcConnectProb">
                <Definition>Probabilistic</Definition>
                <Property name="probability" units="unitless">
                    <SingleValue>0.02</SingleValue>
                </Property>
            </Component>
        </Connectivity>
        <Delay units="ms">
          <SingleValue>1.5</SingleValue>
        </Delay>
    </Projection>
    <Projection name="Inhibition">
        <Source>
            <Reference>Inhibitory</Reference>
        </Source>
        <Destination>
            <Reference>AllNeurons</Reference>
            <FromResponse send_port="coba_I" receive_port="iaf_ISyn" />
        </Destination>
        <Response>
            <Reference>IaFSynapseInhibitory</Reference>
            <FromSource send_port="iaf_spikeoutput" receive_port="coba_spikeinput" />
        </Response>
        <Connectivity>
            <Component name="InhConnectProb">
                <Definition>Probabilistic</Definition>
                <Property name="probability" units="unitless">
                    <SingleValue>0.02</SingleValue>
                </Property>
            </Component>
        </Connectivity>
        <Delay units="ms">
          <SingleValue>1.5</SingleValue>
        </Delay>
    </Projection>
    <ComponentClass name="Probabilistic">
        <Parameter dimension="dimensionless" name="probability"/>
        <ConnectionRule standard_library="http://nineml.net/9ML/1.0/connectionrules/Probabilistic"/>
    </ComponentClass>
    <Unit symbol="mV" dimension="voltage" power="-3" />
    <Unit symbol="nA" dimension="current" power="-9" />
    <Unit symbol="nF" dimension="capacitance" power="-9" />    
    <Unit symbol="ms" dimension="time" power="-3" />
    <Unit symbol="cm_square" dimension="area" power="-4" />
    <Unit symbol="mS" dimension="conductanceDensity" power="-3" />
    <Unit symbol="unitless" dimension="dimensionless"/>
    <Unit symbol="V" dimension="voltage" />
    <Unit symbol="Ohm" dimension="resistance" />
    <Unit symbol="s" dimension="time" power="1" />
    <Unit symbol="per_V" dimension="per_voltage" />
    <Unit symbol="per_s" dimension="per_time" />
    <Unit symbol="uF_per_cm2" dimension="conductanceDensity"/>
    <Dimension name="voltage" m="1" l="2" t="-3" i="-1" />
    <Dimension name="time" t="1" />
    <Dimension name="current" i="1" />
    <Dimension name="dimensionless" />
    <Dimension name="resistance" m="1" l="2" t="-3" i="-2" />
    <Dimension name="per_voltage" m="-1" l="-2" t="3" i="1" />
    <Dimension name="per_time" t="-1" />
    <Dimension name="conductanceDensity" m="-1" t="3" l="-2" i="2" />
    <Dimension i="2" l="-2" m="-1" t="4" name="capacitance"/>
    <Dimension name="area" l="2" />
</NineML>